@model Turnos.Models.Turno
@{
    ViewBag.Title = "Turnos";
}
@if (ViewBag.Message != null)
{
    <div class="alert alert-dismissible @ViewBag.ResultMessageCss">
        <button type="button" class="close" data-dismiss="alert"><a class="h5">X</a></button>
        @ViewBag.Message
    </div>
}

<div class="form-group">
    <label asp-for="Codigo" class="control-label">Planta</label>
    <select asp-for="Codigo" class="form-control" asp-items="ViewBag.Codigo"></select>
</div>

<div class="form-group">
    <label asp-for="IdTipoBoca" class="control-label">Tipo Boca</label>
    <select asp-for="IdTipoBoca" class="form-control" asp-items="ViewBag.IdTipoBoca"></select>
</div>
<div class="form-group">
    <label class="control-label">Filtro de confirmados</label>
    <select id="ddlEstado" class="form-control">
        <option value="">--Todos--</option>
        <option value="NoConfirmados">Aún no Confirmados</option>
    </select>
</div>
<br />
<div id="calender"></div>
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><span id="eventTitle"></span></h4>
            </div>
            <div class="modal-body">
                <button id="btnDelete" class="btn btn-default btn-sm pull-right">
                    <span class="glyphicon glyphicon-remove"></span> Eliminar
                </button>
                <button id="btnEdit" class="btn btn-default btn-sm pull-right" style="margin-right:5px;">
                    <span class="glyphicon glyphicon-pencil"></span> Editar
                </button>
                <button id="btnConfirmar" class="btn btn-default btn-sm pull-right" style="margin-right:5px;">
                    <span class="glyphicon glyphicon-ok"></span> Confirmar
                </button>
                <button id="btnCancelar" class="btn btn-default btn-sm pull-right" style="margin-right:5px;">
                    <span class="glyphicon glyphicon-remove"></span> Cancelar
                </button>
                <p id="pDetails"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">cerrar</button>
            </div>
        </div>
    </div>
</div>
<div id="myModalSave" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Guardar Turno</h4>
            </div>
            <div class="modal-body">
                <form class="col-md-12 form-horizontal">
                    <input type="hidden" id="hdEventID" value="0" />

                    <div class="form-group">
                        <label>Asunto</label>
                        <input type="text" id="txtSubject" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Inicio</label>
                        <div class="input-group date" id="dtp1">
                            <input type="text" id="txtStart" readonly="readonly" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    @*<div class="form-group">
                            <div class="checkbox">
                                <label><input type="checkbox" id="chkIsFullDay" checked="checked" />  Es evento de todo el día</label>
                            </div>
                        </div>*@
                    <div class="form-group">
                        <label>Fin</label>
                        <div class="input-group date" id="dtp2">
                            <input type="text" id="txtEnd" readonly="readonly" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Descripción</label>
                        <textarea id="txtDescription" rows="3" class="form-control"></textarea>
                    </div>
                    <div class="form-group">
                        <label asp-for="IdTransporteTipo" class="control-label">Tipo Transporte</label>
                        <select asp-for="IdTransporteTipo" class="form-control" asp-items="ViewBag.IdTransporteTipo"></select>
                    </div>
                    <div class="form-group">
                        <label>KG Previstos</label>
                        <input type="text" id="txtKGPrevistos" maxlength="10" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Pallets prev</label>
                        <input type="text" id="txtPalletsPrevistos" maxlength="3" class="form-control" />
                    </div>
                    <button type="button" id="btnSave" class="btn btn-success">Guardar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div id="Detalle">

</div>
<link href="~/fullcalendar/fullcalendar.css" rel="stylesheet" />
<link href="~/fullcalendar/fullcalendar.print.css" rel="stylesheet" media="print" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script src="~/fullcalendar/fullcalendar.min.js"></script>
    <script src='~/fullcalendar/locale/es.js'></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>
    <script>

        function validateNumber(event) {
            var key = window.event ? event.keyCode : event.which;
            if (event.keyCode === 8 || event.keyCode === 46) {
                return true;
            } else if (key < 48 || key > 57) {
                return false;
            } else {
                return true;
            }
        };

        $(document).ready(function () {
            var color = ""
            var cantMinSegmento = "";
            var horarioMinimo = "";
            var horarioMaximo = "";
            var minDiasPrevicionTipoBoca = "";
            var horarioMinimoPorBocaLunes = "";
            var horarioMaximoPorBocaLunes = "";
            var horarioMinimoPorBocaMartes = "";
            var horarioMaximoPorBocaMartes = "";
            var horarioMinimoPorBocaMiercoles = "";
            var horarioMaximoPorBocaMiercoles = "";
            var horarioMinimoPorBocaJueves = "";
            var horarioMaximoPorBocaJueves = "";
            var horarioMinimoPorBocaViernes = "";
            var horarioMaximoPorBocaViernes = "";
            var horarioMinimoPorBocaSabado = "";
            var horarioMaximoPorBocaSabado = "";
            var events = [];
            var selectedEvent = null;
            FetchEventAndRenderCalendar($("#IdTipoBoca").val());
            function FetchEventAndRenderCalendar(idTipoBoca, date, estado) {
                events = [];
                $.ajax({
                    type: "GET",
                    url: "Turnos/Home/ObtenerTurnos",
                    data: { 'idTipoBoca': idTipoBoca, 'idPlanta': $("#Codigo").val(), 'estado': estado },
                    success: function (data) {
                        $.each(data, function (i, v) {
                            if (!v.Rendering) {
                                events.push({
                                    eventID: v.EventID,
                                    IdCalendarioFeriado: v.IdCalendarioFeriado == null ? 0 : v.IdCalendarioFeriado,
                                    empid: v.Empid,
                                    title: v.Subject,
                                    description: v.Description,
                                    start: moment(v.Start),
                                    end: v.End != null ? moment(v.End) : null,
                                    color: v.ThemeColor,
                                    allDay: v.IsFullDay,
                                    IdTransporteTipo: v.IdTransporteTipo,
                                    TransporteTipo: v.TransporteTipo,
                                    KGPrevistos: v.KGPrevistos,
                                    PalletsPrevistos: v.PalletsPrevistos,
                                    ConfirmadoProveedor: v.ConfirmadoProveedor,
                                    //rendering: 'background',
                                    //ver que se puede hacer para que el evento de 3 dias de prevision no queden fuera de rango
                                    //puede ser con un classname:  o ver que otra propiedad se puede asignar
                                });
                            }
                            else {
                                events.push({
                                    eventID: v.EventID,
                                    IdCalendarioFeriado: v.IdCalendarioFeriado == null ? 0 : v.IdCalendarioFeriado,
                                    empid: v.Empid,
                                    title: v.Subject,
                                    description: v.Description,
                                    start: moment(v.Start),
                                    end: v.End != null ? moment(v.End) : null,
                                    color: v.ThemeColor,
                                    allDay: v.IsFullDay,
                                    IdTransporteTipo: v.IdTransporteTipo,
                                    TransporteTipo: v.TransporteTipo,
                                    KGPrevistos: v.KGPrevistos,
                                    PalletsPrevistos: v.PalletsPrevistos,
                                    ConfirmadoProveedor: v.ConfirmadoProveedor,
                                    rendering: 'background',
                                    resourceEditable: false,
                                    className: 'fc-bgevent'
                                });
                            }

                        })

                        GenerateCalendar(events);
                        if (date != null)
                            $('#calender').fullCalendar('changeView', 'agendaWeek', date);
                    },
                    error: function (error) {
                        alert('1');
                    }
                })

                $('#txtKGPrevistos').keypress(validateNumber);
                $('#txtPalletsPrevistos').keypress(validateNumber);

                //$.ajax({
                //    type: "POST",
                //    url: "Turnos/Home/TraerCantidadMinutosSegmento",
                //    data: { 'idTipoBoca': $("#IdTipoBoca").val() },
                //    success: function (respuesta) {
                //        cantMinSegmento = respuesta;
                //    },
                //    error: function () {
                //        alert('Error occured');
                //    }
                //});

            }

            function TraerDiasPrevision() {
                $.ajax({
                    type: "POST",
                    url: "Turnos/Home/TraerDiasPrevision",
                    data: { 'idTipoBoca': $("#IdTipoBoca").val() },
                    success: function (respuesta) {
                        minDiasPrevicionTipoBoca = respuesta;
                    },
                    error: function () {
                        alert('2');
                    }
                })
            }

            function TraerHorarioMinimoPorBoca(dia) {
                $.ajax({
                    type: "POST",
                    async: false,
                    url: "Turnos/Home/TraerHorarioMinimoPorBoca",
                    data: { 'dia': dia, 'idPlanta': $("#Codigo").val() },
                    success: function (respuesta) {
                        switch (dia) {
                            case 1:
                                horarioMinimoPorBocaLunes = respuesta;
                                break;
                            case 2:
                                horarioMinimoPorBocaMartes = respuesta;
                                break;
                            case 3:
                                horarioMinimoPorBocaMiercoles = respuesta;
                                break;
                            case 4:
                                horarioMinimoPorBocaJueves = respuesta;
                                break;
                            case 5:
                                horarioMinimoPorBocaViernes = respuesta;
                                break;
                            case 6:
                                horarioMinimoPorBocaSabado = respuesta;
                                break;
                            default:
                                alert('error!');
                        }

                    },
                    error: function () {
                        alert('3');
                    }
                })
            }

            function TraerHorarioMaximoPorBoca(dia) {
                $.ajax({
                    type: "POST",
                    url: "Turnos/Home/TraerHorarioMaximoPorBoca",
                    async: false,
                    data: { 'dia': dia, 'idPlanta': $("#Codigo").val() },
                    success: function (respuesta) {
                        switch (dia) {
                            case 1:
                                horarioMaximoPorBocaLunes = respuesta;
                                break;
                            case 2:
                                horarioMaximoPorBocaMartes = respuesta;
                                break;
                            case 3:
                                horarioMaximoPorBocaMiercoles = respuesta;
                                break;
                            case 4:
                                horarioMaximoPorBocaJueves = respuesta;
                                break;
                            case 5:
                                horarioMaximoPorBocaViernes = respuesta;
                                break;
                            case 6:
                                horarioMaximoPorBocaSabado = respuesta;
                                break;
                            default:
                                alert('error!');
                        }
                    },
                    error: function () {
                        alert('4');
                    }
                })
            }

            $("#IdTipoBoca").change(function () {
                TraerCantidadMinutosSegmento();
                FetchEventAndRenderCalendar(this.value);
            });

            function TraerCantidadMinutosSegmento() {
                $.ajax({
                    type: "POST",
                    url: "Turnos/Home/TraerCantidadMinutosSegmento",
                    async: false,
                    data: { 'idTipoBoca': $("#IdTipoBoca").val(), 'idPlanta': $("#Codigo").val() },
                    success: function (respuesta) {
                        cantMinSegmento = respuesta;
                    },
                    error: function () {
                        alert('5');
                    }
                })
            }

            function PermiteEdicion() {
                var rtn = false;
                $.ajax({
                    type: "POST",
                    async: false,
                    url: "Turnos/Home/PermiteEdicion",
                    data: { 'idTipoBoca': $("#IdTipoBoca").val() },
                    success: function (respuesta) {
                        if (respuesta.permite) {
                            rtn = true;
                        }
                    },
                    error: function () {
                        alert('6');
                    }
                })
                return rtn;
            }

            function VerificarBocaDisponibleporTipo() {
                $.ajax({
                    type: "POST",
                    async: false,
                    url: "Turnos/Home/VerificarBocaDisponibleporTipo",
                    data: { 'idTipoBoca': $("#IdTipoBoca").val() },
                    success: function (respuesta) {
                        if (respuesta.bocaDisponible) {
                            openAddEditForm();
                        }
                        else {
                            alert('No existe una boca disponible para el tipo de boca seleccionado!');
                        }
                    },
                    error: function () {
                        alert('7');
                    }
                })
            }

            function TraerFechaDesdeEvento(eventID) {
                rtn = moment();
                $.ajax({
                    type: "POST",
                    async: false,
                    url: "Turnos/Home/TraerFechaDesdeEvento",
                    data: { 'eventID': eventID },
                    success: function (respuesta) {
                        rtn = respuesta;
                    },
                    error: function () {
                        alert('8');
                    }
                })
                return rtn;
            }

            function GenerateCalendar(events) {
                $('#calender').fullCalendar('destroy');
                TraerDiasPrevision();
                TraerHorarioMinimoPorBoca(1);
                TraerHorarioMinimoPorBoca(2);
                TraerHorarioMinimoPorBoca(3);
                TraerHorarioMinimoPorBoca(4);
                TraerHorarioMinimoPorBoca(5);
                TraerHorarioMinimoPorBoca(6);
                TraerHorarioMaximoPorBoca(1);
                TraerHorarioMaximoPorBoca(2);
                TraerHorarioMaximoPorBoca(3);
                TraerHorarioMaximoPorBoca(4);
                TraerHorarioMaximoPorBoca(5);
                TraerHorarioMaximoPorBoca(6);
                TraerCantidadMinutosSegmento();

                $.ajax({
                    type: "POST",
                    url: "Turnos/Home/TraerHorarioMinimo",
                    async: false,
                    success: function (respuesta) {
                        horarioMinimo = respuesta;
                    },
                    error: function () {
                        alert('Error occured');
                    }
                });

                $.ajax({
                    type: "POST",
                    url: "Turnos/Home/TraerHorarioMaximo",
                    async: false,
                    success: function (respuesta) {
                        horarioMaximo = respuesta;
                    },
                    error: function () {
                        alert('Error occured');
                    }
                });

                $('#calender').fullCalendar({
                    contentHeight: 'auto',
                    defaultDate: new Date(),
                    slotLabelFormat: "HH:mm",
                    defaultView: 'agendaWeek',
                    allDayDefault: false,
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,agendaWeek,agendaDay'
                    },
                    events: events,
                    minTime: horarioMinimo,
                    maxTime: horarioMaximo,
                    //defaultTimedEventDuration: cantMinSegmento, //duracion maxima de un evento
                    nowIndicator: true,

                    eventConstraint: 'businessHours',
                    selectConstraint: 'businessHours',
                    //TOMO LOS HORARIOS DIRECTAMENTE DEL CALENDARIO DE PLANTA PORQUE NO SE DEJA INGRESAR HORARIO FUERA DE LA CONFIGURACION DE LA EMPRESA
                    businessHours: [
                        {
                            start: horarioMinimoPorBocaLunes,
                            end: horarioMaximoPorBocaLunes,
                            dow: horarioMinimoPorBocaLunes == '' ? '' : [1]
                        },
                        {
                            start: horarioMinimoPorBocaMartes,
                            end: horarioMaximoPorBocaMartes,
                            dow: horarioMinimoPorBocaMartes == '' ? '' : [2]
                        },
                        {
                            start: horarioMinimoPorBocaMiercoles,
                            end: horarioMaximoPorBocaMiercoles,
                            dow: horarioMinimoPorBocaMiercoles == '' ? '' : [3]
                        },
                        {
                            start: horarioMinimoPorBocaJueves,
                            end: horarioMaximoPorBocaJueves,
                            dow: horarioMinimoPorBocaJueves == '' ? '' : [4]
                        },
                        {
                            start: horarioMinimoPorBocaViernes,
                            end: horarioMaximoPorBocaViernes,
                            dow: horarioMinimoPorBocaViernes == '' ? '' : [5]
                        },
                        {
                            start: horarioMinimoPorBocaSabado,
                            end: horarioMaximoPorBocaSabado,
                            dow: horarioMinimoPorBocaSabado == '' ? '' : [6]
                        }

                    ],
                    eventLimit: true,
                    eventDurationEditable: true,
                    allDaySlot: false,
                    eventRender: function (event, element, view) {
                        if (moment().diff(event.start, 'minutes') > 0)
                            event.draggable = false;

                        //Si el evento tiene el campo idcalendarioferiado quiere decir que los datos son de la tabla feriados ver ObtenerTurnos
                        if (event.IdCalendarioFeriado != 0) {
                            element.css('background-color', 'silver')
                        }
                        if (event.color) {
                            element.css('background-color', event.ThemeColor)
                            //if ((moment().diff(event.start, 'minutes') > 0))
                            //    element.css('background-color', "grey")
                        }

                    },
                    slotDuration: cantMinSegmento,
                    eventClick: function (calEvent, jsEvent, view) {
                        selectedEvent = calEvent;                        
                        if (jsEvent.target.classList.contains('fc-bgevent')) {
                            alert('Click Background Event Area');
                        }
                        if (PermiteEdicion() && selectedEvent.eventID != 0 && moment().diff(selectedEvent.start, 'minutes') <= 0) {
                            if (selectedEvent.ConfirmadoProveedor) {
                                $('#myModal #btnConfirmar').prop("disabled", true).text('Aprobado').css("color", "green");
                                $('#myModal #btnCancelar').prop("disabled", false);
                            }
                            else {
                                $('#myModal #btnCancelar').prop("disabled", true);
                                $('#myModal #btnConfirmar').prop("disabled", false).text('Confirmar').css("color", "black");
                            }

                            $('#myModal #eventTitle').text(calEvent.title);
                            var $description = $('<div/>');
                            $description.append($('<p/>').html('<b>Inicia: </b>' + calEvent.start.format("DD-MMM-YYYY HH:mm")));
                            if (calEvent.end != null) {
                                $description.append($('<p/>').html('<b>Finaliza: </b>' + calEvent.end.format("DD-MMM-YYYY HH:mm")));
                            }
                            $description.append($('<p/>').html('<b>Descripción: </b>' + calEvent.description));
                            if (calEvent.IdCalendarioFeriado == null || calEvent.IdCalendarioFeriado == 0) {
                                $description.append($('<p/>').html('<b>Tipo Transporte: </b>' + (calEvent.TransporteTipo == "" ? "No asignado" : calEvent.TransporteTipo)));
                                $description.append($('<p/>').html('<b>KG previstos: </b>' + calEvent.KGPrevistos));
                                $description.append($('<p/>').html('<b>Pallets prev: </b>' + calEvent.PalletsPrevistos));
                                $('#myModal #pDetails').empty().html($description);
                                $('#myModal').modal({ backdrop: 'static', keyboard: false })
                            }

                        }
                    },
                    selectable: true,
                    select: function (start, end, jsEvent) {                        
                        selectedEvent = {
                            eventID: 0,
                            title: '',
                            description: '',
                            start: start,
                            end: end,
                            allDay: false,
                            color: '',
                            IdTransporteTipo: 0,
                            TransporteTipo: '',
                            KGPrevistos: 0,
                            PalletsPrevistos: 0,
                            rendering: 0,
                        };
                        
                        if (moment.duration(moment().diff(start)).asDays() < -3) {  ///tres deberia ser dias de prevision
                            if (PermiteEdicion())
                                VerificarBocaDisponibleporTipo()
                        }
                    },                    
                    editable: true,
                    eventDrop: function (event, delta, revertFunc) {
                        evento = event;
                        if (moment().diff(TraerFechaDesdeEvento(evento.eventID), 'minutes') >= 0 || evento.eventID == 0 || moment().diff(event.start, 'minutes') > 0) {
                            revertFunc();
                            return false;
                        }
                        if (!PermiteDragDropyResize(event)) {
                            revertFunc();
                            return false;
                        }
                        if (!confirm("Esta seguro de este cambio?")) {
                            revertFunc();
                        } else {
                            var data = {
                                EventID: event.eventID,
                                empid: event.empid,
                                Subject: event.title,
                                Start: event.start.format('DD/MM/YYYY HH:mm'),
                                End: event.end != null ? event.end.format('DD/MM/YYYY HH:mm') : null,
                                Description: event.description,
                                ThemeColor: event.ThemeColor,
                                //IsFullDay: event.allDay,
                                IdCalendarioPlanta: event.IdCalendarioPlanta,
                                IdTransporteTipo: event.IdTransporteTipo,
                                TransporteTipo: event.TransporteTipo,
                                KGPrevistos: event.KGPrevistos,
                                PalletsPrevistos: event.PalletsPrevistos,
                                IdTipoBoca: $("#IdTipoBoca").val(),
                                confirmadoProveedor: true,
                            };
                            GrabarTurno(data, revertFunc);
                        }
                    },
                    eventResize: function (event, delta, revertFunc) {
                        if (!PermiteDragDropyResize(event)) {
                            revertFunc();
                            return false;
                        }
                        if (!confirm("Esta seguro de este cambio?")) {
                            revertFunc();
                        } else {
                            var data = {
                                EventID: event.eventID,
                                empid: event.empid,
                                Subject: event.title,
                                Start: event.start.format('DD/MM/YYYY HH:mm'),
                                End: event.end != null ? event.end.format('DD/MM/YYYY HH:mm') : null,
                                Description: event.description,
                                ThemeColor: event.ThemeColor,
                                //IsFullDay: event.allDay,
                                IdCalendarioPlanta: event.IdCalendarioPlanta,
                                IdTransporteTipo: event.IdTransporteTipo,
                                TransporteTipo: event.TransporteTipo,
                                KGPrevistos: event.KGPrevistos,
                                PalletsPrevistos: event.PalletsPrevistos,
                                IdTipoBoca: $("#IdTipoBoca").val(),
                                confirmadoProveedor: true,
                            };
                            GrabarTurno(data, revertFunc);
                        }
                    },

                    eventMouseover: function (data, event, view) {
                        if (data.eventID != 0) {
                            if (data.IdCalendarioFeriado != null && data.IdCalendarioFeriado != 0) {
                                tooltip = '<div id="tooltip" class="tooltiptopicevent" style="width:auto;height:auto;background:#feb811;position:fixed;left: 45%;top: 45%;z-index:10001;padding:10px 10px 10px 10px ;  line-height: 200%;">' + data.title + '</br>' + 'Descripcion: ' + data.description + '</br>De: ' + moment(data.start).format("HH:mm") + ' a: ' + moment(data.end).format("HH:mm") + '</div>';
                            } else {
                                tooltip = '<div id="tooltip" class="tooltiptopicevent" style="width:auto;height:auto;background:#feb811;position:fixed;left: 45%;top: 45%;z-index:10001;padding:10px 10px 10px 10px ;  line-height: 200%;">' + data.title + '</br>' + 'Descripcion: ' + data.description + '</br>De: ' + moment(data.start).format("HH:mm") + ' a: ' + moment(data.end).format("HH:mm") + '</br>Tipo Transp: ' + (data.TransporteTipo == '' ? 'No asignado' : data.TransporteTipo) + '</br>' + 'KG previstos: ' + data.KGPrevistos + '</br>' + 'Pallets prev: ' + data.PalletsPrevistos + '</div>';
                            }

                            $("body").append(tooltip);
                            $(this).mouseover(function (e) {
                                $(this).css('z-index', 10000);

                                $('.tooltiptopicevent').fadeIn('500');
                                $('.tooltiptopicevent').fadeTo('10', 1.9);
                            }).mousemove(function (e) {
                                $('.tooltiptopicevent').css('top', e.pageY - 140);
                                $('.tooltiptopicevent').css('left', e.pageX + 20);
                            });
                        }

                    },
                    eventMouseout: function (data, event, view) {
                        $(this).css('z-index', 8);

                        $('.tooltiptopicevent').remove();

                    },

                    eventResizeStart: function () {
                        $('.tooltiptopicevent').hide();
                    },
                    eventDragStart: function () {
                        $('.tooltiptopicevent').hide();
                    },
                    viewDisplay: function (view) {
                        $('.tooltiptopicevent').hide();
                    },

                })
            }

            $('#btnEdit').click(function () {
                //abre popup para editar turno
                openAddEditForm();
            })
            $('#btnDelete').click(function () {
                if (selectedEvent != null && confirm('¿Está seguro de eliminar el Turno?')) {
                    $.ajax({
                        type: "POST",
                        url: 'Turnos/Home/BorrarTurno',
                        data: { 'eventID': selectedEvent.eventID },
                        success: function (data) {
                            if (data.status) {
                                //actualizar el calendario
                                FetchEventAndRenderCalendar($('#IdTipoBoca').val(), moment(data.start).format("YYYY-MM-DD"));
                                $('#myModal').modal('hide');
                            }
                        },
                        error: function () {
                            alert('9');
                        }
                    })
                }
            })

            $('#btnConfirmar').click(function () {
                if (selectedEvent != null) {
                    $.ajax({
                        type: "POST",
                        url: 'Turnos/Home/ConfirmarTurno',
                        data: { 'eventID': selectedEvent.eventID },
                        success: function (data) {
                            if (data.status) {
                                //actualizar el calendario
                                FetchEventAndRenderCalendar($("#IdTipoBoca").val(), data.start);
                                $('#myModal').modal('hide');
                            }
                        },
                        error: function () {
                            alert('10');
                        }
                    })
                }
            })

            $('#btnCancelar').click(function () {
                if (selectedEvent != null) {
                    $.ajax({
                        type: "POST",
                        url: 'Turnos/Home/CancelarTurno',
                        data: { 'eventID': selectedEvent.eventID },
                        success: function (data) {
                            if (data.status) {
                                //actualizar el calendario
                                FetchEventAndRenderCalendar($("#IdTipoBoca").val(), data.start);
                                $('#myModal').modal('hide');
                            }
                        },
                        error: function () {
                            alert('10');
                        }
                    })
                }
            })
            /*
            $('#dtp1').datetimepicker({
                format: 'DD/MM/YYYY HH:mm'
            });
            $('#dtp2').datetimepicker({
                format: 'DD/MM/YYYY HH:mm'
            });
            */
            /*
            $('#chkIsFullDay').change(function () {
                if ($(this).is(':checked')) {
                    $('#divEndDate').hide();
                }
                else {
                    $('#divEndDate').show();
                }
            });*/

            function openAddEditForm() {
                if ($('#IdTipoBoca').val() == null) {
                    alert('Selecciona un tipo de boca!');
                    revertFunc();
                }
                else {
                    if (selectedEvent != null) {
                        $('#hdEventID').val(selectedEvent.eventID);
                        $('#txtSubject').val(selectedEvent.title);
                        $('#txtStart').val(selectedEvent.start.format('DD/MM/YYYY HH:mm'));
                        //$('#chkIsFullDay').prop("checked", selectedEvent.allDay || false);
                        //$('#chkIsFullDay').change();
                        $('#txtEnd').val(selectedEvent.end.format('DD/MM/YYYY HH:mm'));
                        $('#txtDescription').val(selectedEvent.description);
                        $('#IdTransporteTipo').val(selectedEvent.IdTransporteTipo);
                        $('#txtKGPrevistos').val(selectedEvent.KGPrevistos);
                        $('#txtPalletsPrevistos').val(selectedEvent.PalletsPrevistos);
                    }
                    else {

                        $('#IdTransporteTipo').val(1);
                    }
                    $('#myModal').modal('hide');
                    $('#myModalSave').modal({ backdrop: 'static', keyboard: false })

                }

            }

            $('#btnSave').click(function () {
                var startDate = moment($('#txtStart').val(), "DD/MM/YYYY HH:mm A").toDate();
                var endDate = moment($('#txtEnd').val(), "DD/MM/YYYY HH:mm A").toDate();
                //validaciones
                if ($('#txtSubject').val().trim() == "") {
                    alert('Asunto requerido');
                    return;
                }
                if ($('#txtStart').val().trim() == "") {
                    alert('Fecha Inicio requerida');
                    return;
                }
                if ($('#txtEnd').val().trim() == "") {
                    alert('Fecha Fin requerida');
                    return;
                }
                else {

                    if (startDate > endDate) {
                        alert('Fecha no válida');
                        return;
                    }
                }
                var data = {
                    EventID: $('#hdEventID').val(),
                    Subject: $('#txtSubject').val().trim(),
                    Start: $('#txtStart').val().trim(),
                    End: $('#txtEnd').val().trim(),
                    Description: $('#txtDescription').val(),
                    //IsFullDay: $('#chkIsFullDay').is(':checked'),
                    IdTransporteTipo: $('#IdTransporteTipo').val(),
                    KGPrevistos: $('#txtKGPrevistos').val(),
                    PalletsPrevistos: $('#txtPalletsPrevistos').val(),
                    IdTipoBoca: $("#IdTipoBoca").val(),
                    confirmadoProveedor: true
                }
                GrabarTurno(data);

            })

            function GrabarTurno(data, revertFunc) {
                $.ajax({
                    type: "POST",
                    url: 'Turnos/Home/GrabarTurno',
                    data: { 'e': data, 'idPlanta': $("#Codigo").val().trim() },
                    success: function (data) {
                        if (!data.errorFeriado) {
                            if (!data.errorBoca) {
                                if (!data.errorEvento) {
                                    if (data.status) {
                                        //actualiza calendario
                                        $('#myModalSave').modal('hide');
                                        FetchEventAndRenderCalendar($('#IdTipoBoca').val(), data.start);
                                    }
                                } else { alert('No hay bocas disponibles!, existen otros turnos para este horario.'); revertFunc; }
                            }
                            else { alert('No se encuentra boca disponible para este turno!'); revertFunc; }
                        }
                        else { alert('Esta intentando ingresar un turno un dia feriado!, intente otra fecha'); revertFunc; }
                    },
                    error: function () {
                        alert('11');
                    }
                })
            }

            function MostrarDetalle(event) {
                $('#Detalle').text(event.start);
            }

            function PermiteDragDropyResize(event) {
                var rtn = false;
                //Si es feriado no permite dragdrop
                if (event.IdCalendarioFeriado == 0 && event.eventID != 0) {
                    rtn = true;
                }
                return rtn;
            }

            $("#ddlEstado").change(function () {
                FetchEventAndRenderCalendar($("#IdTipoBoca").val(), moment().format("YYYY-MM-DD"), $("#ddlEstado").val())
            });

        })
    </script>
}
